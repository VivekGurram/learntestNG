<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-11T18:59:17 IST" name="Suite" finished-at="2024-10-11T19:00:37 IST" duration-ms="80493">
    <groups>
      <group name="regression">
        <method signature="Demo.openapp()[pri:1, instance:learntestNG.Demo@1e0b4072]" name="openapp" class="learntestNG.Demo"/>
      </group> <!-- regression -->
      <group name="sanity">
        <method signature="Demo1.openGoogle()[pri:0, instance:learntestNG.Demo1@f09733f]" name="openGoogle" class="learntestNG.Demo1"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2024-10-11T18:59:17 IST" name="Test" finished-at="2024-10-11T19:00:37 IST" duration-ms="80493">
      <class name="listeners.listeners">
        <test-method is-config="true" signature="setup()[pri:0, instance:listeners.listeners@4b45a2f5]" started-at="2024-10-11T18:59:47 IST" name="setup" finished-at="2024-10-11T18:59:48 IST" duration-ms="1510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="openapp()[pri:1, instance:listeners.listeners@4b45a2f5]" started-at="2024-10-11T18:59:48 IST" name="openapp" finished-at="2024-10-11T18:59:57 IST" duration-ms="8850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapp -->
        <test-method signature="logocheck()[pri:2, instance:listeners.listeners@4b45a2f5]" started-at="2024-10-11T18:59:57 IST" name="logocheck" finished-at="2024-10-11T18:59:57 IST" depends-on-methods="listeners.listeners.openapp" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logocheck -->
        <test-method signature="login()[pri:3, instance:listeners.listeners@4b45a2f5]" started-at="2024-10-11T18:59:57 IST" name="login" finished-at="2024-10-11T19:00:13 IST" depends-on-methods="listeners.listeners.openapp" duration-ms="15437" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='oxd-topbar-header-title']"}
  (Session info: chrome=129.0.6668.90)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1ca71bdd6d811244ec497bb16ac3c4d7, findElement {using=xpath, value=//div[@class='oxd-topbar-header-title']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 129.0.6668.90, chrome: {chromedriverVersion: 129.0.6668.100 (cf58cba358d..., userDataDir: C:\Users\0033WL~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65501}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65501/devtoo..., se:cdpVersion: 129.0.6668.90, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1ca71bdd6d811244ec497bb16ac3c4d7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='oxd-topbar-header-title']"}
  (Session info: chrome=129.0.6668.90)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1ca71bdd6d811244ec497bb16ac3c4d7, findElement {using=xpath, value=//div[@class='oxd-topbar-header-title']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 129.0.6668.90, chrome: {chromedriverVersion: 129.0.6668.100 (cf58cba358d..., userDataDir: C:\Users\0033WL~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65501}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65501/devtoo..., se:cdpVersion: 129.0.6668.90, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1ca71bdd6d811244ec497bb16ac3c4d7
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at listeners.listeners.login(listeners.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="logout()[pri:4, instance:listeners.listeners@4b45a2f5]" started-at="2024-10-11T19:00:13 IST" name="logout" finished-at="2024-10-11T19:00:13 IST" depends-on-methods="listeners.listeners.login" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method listeners.logout()[pri:4, instance:listeners.listeners@4b45a2f5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method listeners.logout()[pri:4, instance:listeners.listeners@4b45a2f5] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="close()[pri:0, instance:listeners.listeners@4b45a2f5]" started-at="2024-10-11T19:00:13 IST" name="close" finished-at="2024-10-11T19:00:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- listeners.listeners -->
      <class name="learntestNG.Demo2">
        <test-method is-config="true" signature="bm()[pri:0, instance:learntestNG.Demo2@5af97169]" started-at="2024-10-11T18:59:19 IST" name="bm" finished-at="2024-10-11T18:59:23 IST" duration-ms="4547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method is-config="true" signature="m2()[pri:0, instance:learntestNG.Demo2@5af97169]" started-at="2024-10-11T19:00:17 IST" name="m2" finished-at="2024-10-11T19:00:17 IST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method signature="m3()[pri:0, instance:learntestNG.Demo2@5af97169]" started-at="2024-10-11T19:00:17 IST" name="m3" finished-at="2024-10-11T19:00:30 IST" duration-ms="12451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m3 -->
        <test-method is-config="true" signature="am()[pri:0, instance:learntestNG.Demo2@5af97169]" started-at="2024-10-11T19:00:30 IST" name="am" finished-at="2024-10-11T19:00:37 IST" duration-ms="6995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="close()[pri:0, instance:learntestNG.Demo2@5af97169]" started-at="2024-10-11T19:00:37 IST" name="close" finished-at="2024-10-11T19:00:37 IST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="at()[pri:0, instance:learntestNG.Demo2@5af97169]" started-at="2024-10-11T19:00:37 IST" name="at" finished-at="2024-10-11T19:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- at -->
      </class> <!-- learntestNG.Demo2 -->
      <class name="learntestNG.Demo1">
        <test-method signature="openGoogle()[pri:0, instance:learntestNG.Demo1@f09733f]" started-at="2024-10-11T19:00:13 IST" name="openGoogle" finished-at="2024-10-11T19:00:17 IST" duration-ms="4090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openGoogle -->
      </class> <!-- learntestNG.Demo1 -->
      <class name="learntestNG.Demo">
        <test-method is-config="true" signature="setup()[pri:0, instance:learntestNG.Demo@1e0b4072]" started-at="2024-10-11T18:59:17 IST" name="setup" finished-at="2024-10-11T18:59:19 IST" duration-ms="2207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="openapp()[pri:1, instance:learntestNG.Demo@1e0b4072]" started-at="2024-10-11T18:59:29 IST" name="openapp" finished-at="2024-10-11T18:59:35 IST" duration-ms="6296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapp -->
        <test-method signature="logocheck()[pri:2, instance:learntestNG.Demo@1e0b4072]" started-at="2024-10-11T18:59:35 IST" name="logocheck" finished-at="2024-10-11T18:59:35 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logocheck -->
        <test-method signature="login()[pri:3, instance:learntestNG.Demo@1e0b4072]" started-at="2024-10-11T18:59:35 IST" name="login" finished-at="2024-10-11T18:59:40 IST" depends-on-methods="learntestNG.Demo.openapp, learntestNG.Demo.logocheck" duration-ms="4359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="logout()[pri:4, instance:learntestNG.Demo@1e0b4072]" started-at="2024-10-11T18:59:40 IST" name="logout" finished-at="2024-10-11T18:59:47 IST" depends-on-methods="learntestNG.Demo.login" duration-ms="6940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="close()[pri:0, instance:learntestNG.Demo@1e0b4072]" started-at="2024-10-11T19:00:37 IST" name="close" finished-at="2024-10-11T19:00:37 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- learntestNG.Demo -->
      <class name="dataprovider.dataprovider">
        <test-method is-config="true" signature="setup()[pri:0, instance:dataprovider.dataprovider@4a883b15]" started-at="2024-10-11T18:59:23 IST" name="setup" finished-at="2024-10-11T18:59:25 IST" duration-ms="1991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:dataprovider.dataprovider@4a883b15]" started-at="2024-10-11T18:59:25 IST" name="login" data-provider="dp" finished-at="2024-10-11T18:59:29 IST" duration-ms="3563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pavanol123@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="logout()[pri:0, instance:dataprovider.dataprovider@4a883b15]" started-at="2024-10-11T18:59:29 IST" name="logout" finished-at="2024-10-11T18:59:29 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- dataprovider.dataprovider -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
